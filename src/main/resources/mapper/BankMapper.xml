<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.family.manage.mapper.BankMapper">
  <resultMap id="BaseResultMap" type="com.family.manage.entity.Bank">
    <id column="bid" jdbcType="INTEGER" property="bid" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="bname" jdbcType="VARCHAR" property="bname" />
    <result column="umobile" jdbcType="VARCHAR" property="umobile" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="btype" jdbcType="VARCHAR" property="btype" />
    <result column="createtime" javaType="Date" property="createtime"></result>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    bid, `uid`, bname, umobile, money, btype
  </sql>
  <select id="selectByExample" parameterType="com.family.manage.entity.BankExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByUid" parameterType="integer">
    delete from bank where uid = #{uid};
  </delete>
  <select id="selectByUid" resultType="com.family.manage.entity.Bank" parameterType="integer">
    select * from bank where uid = #{uid}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bank
    where bid = #{bid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bank
    where bid = #{bid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.family.manage.entity.BankExample">
    delete from bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.family.manage.entity.Bank">
    insert into bank (bid, `uid`, bname, 
      umobile, money, btype,createtime
      )
    values (#{bid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{bname,jdbcType=VARCHAR}, 
      #{umobile,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, #{btype,jdbcType=VARCHAR},#{createtime}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.family.manage.entity.Bank">
    insert into bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bid != null">
        bid,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
      <if test="bname != null">
        bname,
      </if>
      <if test="umobile != null">
        umobile,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="btype != null">
        btype,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bid != null">
        #{bid,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="bname != null">
        #{bname,jdbcType=VARCHAR},
      </if>
      <if test="umobile != null">
        #{umobile,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="btype != null">
        #{btype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.family.manage.entity.BankExample" resultType="java.lang.Long">
    select count(*) from bank
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update bank
    <set>
      <if test="record.bid != null">
        bid = #{record.bid,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.bname != null">
        bname = #{record.bname,jdbcType=VARCHAR},
      </if>
      <if test="record.umobile != null">
        umobile = #{record.umobile,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.btype != null">
        btype = #{record.btype,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update bank
    set bid = #{record.bid,jdbcType=INTEGER},
      `uid` = #{record.uid,jdbcType=INTEGER},
      bname = #{record.bname,jdbcType=VARCHAR},
      umobile = #{record.umobile,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      btype = #{record.btype,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.family.manage.entity.Bank">
    update bank
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=INTEGER},
      </if>
      <if test="bname != null">
        bname = #{bname,jdbcType=VARCHAR},
      </if>
      <if test="umobile != null">
        umobile = #{umobile,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="btype != null">
        btype = #{btype,jdbcType=VARCHAR},
      </if>
    </set>
    where bid = #{bid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.family.manage.entity.Bank">
    update bank
    set `uid` = #{uid,jdbcType=INTEGER},
      bname = #{bname,jdbcType=VARCHAR},
      umobile = #{umobile,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      btype = #{btype,jdbcType=VARCHAR}
    where bid = #{bid,jdbcType=INTEGER}
  </update>
  <update id="moneyIn">
    update bank set money = money+ #{moneyIn} where uid = #{uid} and bid = #{bid}
  </update>
</mapper>